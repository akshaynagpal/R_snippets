x<-1
x
msg<-hello
msg<-"hello"
msg
msg<-"hello" #bye bye
msg
print(x)
print(msg+x)
print(msg+x);
print(msg+x)
x<-1:20
x
x<-c(0.5,hell)
x<-c(0.5,0.6)
x
x<-vector("numeric",length=10)
x
x<-c(0.5,"hell")
x
x<-("TRUE",2)
x<-(TRUE,2)
x<-C(TRUE,2)
x<-c(TRUE,2)
x
x<-0:6
as.numeric(x)
as.character(x)
as.logical(x)
0/Inf
2/Inf
Inf/Inf
inf
Inf
Inf/0
as.complex(x)
m<-matrix(1:6,nrow=2,ncol=3)
m
m<-1:10
m
dim(m)<-c(2,5)
m
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
x
x<-x+"yes"
x<-x+factor(c("yes"))
x
x
x<-factor(c("yes","yes","no","yes","no"))
x
unclass(x)
is.na(x)
!(is.na(x))
q()
!(is.nan(x))
x<-data.frame(foo=1:4,bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
names(x)
x
$x
x<-list(a=1,y=2)
$a
x
m
dimnames(m)<-list(c("row1","row2"),c("Col1","Col2"))
dimnames(m)<-list(c("row1","row2","row3","row4","row5"),c("Col1","Col2"))
dimnames(m)<-list(c("row1","row2"),c("Col1","Col2","Col3","Col4","Col5"))
m
q()
read.csv("hw1_data.csv")
read.csv("C:\Users\advance\Documents\GitHub\datasciencecoursera\hw1_data.csv")
data<-read.csv("C:\Users\advance\Documents\GitHub\datasciencecoursera\hw1_data.csv")
read.csv("C:\Users\advance\Documents\GitHub\datasciencecoursera\hw1_data.csv")
read.csv("C:\Users\advance\Documents\GitHub\datasciencecoursera\hw1_data.csv")
data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv")
data
read.csv("C:\Users\advance\Documents\GitHub\datasciencecoursera\hw1_data.csv",nrows=2)
data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=2)
data
classes<-sapply(data,classes)
classes<-sapply(data,class)
classes
data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=1000,skip=151)
data
data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=200,skip=151)
data
print(data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=200,skip=151))
nrow(data)
print(data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=200))
nrow(data)
maxrow<-nrow(data)
maxrow
print(data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=maxrow,skip=maxrow-2))
data
print(data<-read.csv("C:\\Users\\advance\\Documents\\GitHub\\datasciencecoursera\\hw1_data.csv",nrows=maxrow))
dat
daa
data
data[1,]
data[47]
data[47,]
data[47:48,]
data[maxrow-1:maxrow-2,]
data[(maxrow-1):(maxrow-2),]
data[(maxrow):(maxrow-1),]
data[(maxrow-1):(maxrow),]
data
narows<-is.na(data)
narows
data[!narows]
data
data[!bad]
data[!narows]
nrows(data[!narows])
nrow(data[!narows])
data
good<-complete.cases(data)
good
nrow(good)
data[good,][,]
nrow[data[good,][,]]
data[good,][,]
goodrows<-data[good,][,]
goodrows
nrow(goodrows)
maxrow-nrow(goodrows)
data
data[good,][,1]
ozonena<-data[good,][,1]
nrow(ozonena)
ozonena
ozonena
data[good,][,1]
gooddata<- data[good,][,1]
gooddata
nrow(gooddata)
data
ozonedata<-data[,1]
ozonedata
ozonedata[!is.na(ozonedata)]
goodozonedata<-ozonedata[!is.na(ozonedata)]
goodozonedata
ozonedata
nrow[ozonedata]
nrow(ozonedata)
nrows(ozonedata)
nrow(ozonedata[])
nrow(ozonedata[1,])
nrow(ozonedata[,])
nrow(ozonedata[1,1])
ozonedata
goodozonedata
nrow(ozonedata)
nrow(gooddata)
nrow(ozonedata)
nrow(goodozonedata)
data[,complete.cases(data)][,1]
compp<-complete.cases(data)
compp
nrow(compp)
data[,compp][,1]
nrow(data)
nrow(data[1,])
nrow(data[,is.na(data)][,1])
nrow(data[,1])
nrow(data[1,1])
nrow(data[1,])
nrow(data[1])
nrow(data[2])
nrow(data[7])
nrow(data[1])
is.na(ozonedata)
nrow(is.na(ozonedata))
nrow(data[1])-5
q()
add2<-function(x,y)
{
x+y
}
add2(3,5)
add2<-function(x,y)
{
return x+y
}
x+y
add2<-function(x,y)
{
x+y
}
add2<-function(x,y)
{
x+y
}
add2<-function(x,y)
{
x+y
}
add2<-function(x,y)
{
x+y
}
add2(1.0,1.0)
add2<-function(x,y)
{
x+y
}
above<-function(x,n){
use<-x>n
x[use]
}
above<-function(x,n){
use<-x>n
x[use]
}
above(x)
above(x,14)
x<-1:20
above(x,14)
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmean<-function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmean(airquality)
columnmean<-function(y,removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i],na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,removeNA=false)
columnmean(airquality,removeNA=FALSE)
columnmean(airquality,FALSE)
columnmean(airquality,TRUE)
CONTRIBUTORS()
contributors()
make.power<-function(x){
pow<-function(n){
x^n
}
pow
}
make.power(3)
make.power(3)(5)
make.power(3)(2)
ls(environment(make.power()))
ls(environment(pow))
ls(environment(pow()))
ls(environment(make.power()))
ls(environment(make.power()()))
ls(environment(make.power(pow))
ls(environment(make.power(pow))
ls(environment(make.power(pow()))
fnwrg
egeg
eger
gegergerg
help
help()
hello
exit
exit()
help
y<-10
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){
x*y
}
f(3)
install.packages(swirl)
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl
swirl()
1:20
pi:10
15:1
:
?:
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
z
bye()
getwd()
getwd()
dir()
myfunction <- function(){
x<- rnorm(100)
mean(x)
}
ls()
ls
ls()
classes()
data()
data(UKGas)
data()
CO2
ls()
myfunction()
myfunction()
getwd()
dir()
source(mycode.R)
source('mycode.R')
ls()
source('mycode.R')
ls()
second(4)
second(4:10)
second(4:11)
second(4:12)
source('mycode.R')
second(4)
second(4:10)
second(4:11)
x[1:20]
x<- 1:20
x
x<- 1:200
x
x<- 1:200
x
x
x
vector()
vector(a)
vector()
print (vector())
x<-vector()
x
1/0
1/inf
1/Inf
0/0
x
attributes(x)
x<- 1:20
attributes(x)
print (attributes(x))
x.length()
length(x)
intVector <- c(1,2)
intVector
complexVector <- c(1+2i,4+5i)
complexVector(0)
complexVector[0]
complexVector
complexVector{0}
complexVector
complexVector[1]
complexVector[1]+complexVector[2]
T + F
F
F+F
T
TRUE + FALSE
TRUE + FALSE + tRUE
TRUE + FALSE + TRUE
(TRUE + FALSE) + TRUE
attributes(complexVector)
attributes(complexVector[])
attributes(complexVector[0])
x<-vector("numeric",length=10)
x
q()
# Box office Star Wars: In Millions (!)
# Construct matrix
box_office_all <- c(461, 314.4, 290.5, 247.9, 309.3, 165.8)
movie_names <- c("A New Hope","The Empire Strikes Back","Return of the Jedi")
col_titles <- c("US","non-US")
star_wars_matrix <- matrix(box_office_all, nrow = 3, byrow = TRUE, dimnames = list(movie_names, col_titles))
# The worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
names(worldwide_vector)<-c("Worldwide")
worldwide_vector
# Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix,worldwide_vector)
all_wars_matrix
colnames(all_wars_matrix)[3]<- "Worldwide"
all_wars_matrix
# Box office Star Wars: In Millions (!)
# Construct matrix
box_office_all <- c(461, 314.4, 290.5, 247.9, 309.3, 165.8)
movie_names <- c("A New Hope","The Empire Strikes Back","Return of the Jedi")
col_titles <- c("US","non-US")
star_wars_matrix <- matrix(box_office_all, nrow = 3, byrow = TRUE, dimnames = list(movie_names, col_titles))
# The worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
worldwide_vector
# Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix,worldwide_vector)
all_wars_matrix
colnames(all_wars_matrix)[3]<- "Worldwide"
all_wars_matrix
q()
worldwide_vector
# Box office Star Wars: In Millions (!)
# Construct matrix
box_office_all <- c(461, 314.4, 290.5, 247.9, 309.3, 165.8)
movie_names <- c("A New Hope","The Empire Strikes Back","Return of the Jedi")
col_titles <- c("US","non-US")
star_wars_matrix <- matrix(box_office_all, nrow = 3, byrow = TRUE, dimnames = list(movie_names, col_titles))
# The worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
worldwide_vector
# Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix,worldwide_vector)
all_wars_matrix
colnames(all_wars_matrix)[3]<- "Worldwide"
all_wars_matrix
